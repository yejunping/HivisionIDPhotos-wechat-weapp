name: Package to JAR and Create Release

on:
  # 支持手动触发
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'
      release_name:
        description: 'Release name'
        required: true
        default: 'Release v1.0.0'

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code from specific repository
        uses: actions/checkout@v3
        with:
          repository: yejunping/HivisionIDPhotos-wechat-weapp
          path: HivisionIDPhotos-wechat-weapp  # 指定检出路径，避免路径嵌套
        continue-on-error: true  # 允许步骤失败，以便后续打印调试信息

      - name: Print checkout error details
        if: ${{ failure() }}
        run: |
          echo "Checkout failed with exit code: $?"
          ls -l  # 列出当前目录下的文件和文件夹

      - name: Print current working directory
        run: pwd

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven

      - name: Build project with Maven
        run: |
          cd HivisionIDPhotos-wechat-weapp  # 进入项目目录
          mvn -B -e -X clean package  # -e 显示详细错误信息，-X 显示调试信息
          if [ -d "target" ]; then
            chmod -R 777 target  # 如果 target 目录存在，修改其权限
          fi

      - name: List files in target directory
        run: |
          cd HivisionIDPhotos-wechat-weapp
          ls -l target

      - name: Check if tag already exists
        id: check_tag
        run: |
          cd HivisionIDPhotos-wechat-weapp  # 切换到正确的工作目录
          TAG_EXISTS=$(git tag -l "${{ github.event.inputs.release_tag }}")
          if [ -n "$TAG_EXISTS" ]; then
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        id: create_release
        if: steps.check_tag.outputs.tag_exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.release_tag }}
          release_name: ${{ github.event.inputs.release_name }}
          draft: false
          prerelease: false

      - name: Upload JAR as Release Asset
        id: upload-release-asset
        if: steps.check_tag.outputs.tag_exists == 'false'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: HivisionIDPhotos-wechat-weapp/target/HivisionIDPhotos-wechat-weapp.jar  # 替换为实际生成的 JAR 文件路径
          asset_name: HivisionIDPhotos-wechat-weapp.jar  # 替换为实际生成的 JAR 文件名
          asset_content_type: application/java-archive
